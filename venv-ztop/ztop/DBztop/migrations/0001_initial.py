# Generated by Django 4.1.2 on 2022-11-07 21:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeOf', models.CharField(max_length=50)),
                ('brand', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Consumables',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date logged')),
                ('location', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=100)),
                ('job_notes', models.TextField()),
                ('os', models.CharField(choices=[('linux', 'Linux'), ('macos', 'MacOS'), ('w_xp', 'Windows XP'), ('w_vista', 'Windows Vista'), ('w_7', 'Windows 7'), ('w_8', 'Windows 8'), ('W_10', 'Windows 10'), ('w_11', 'Windows 11'), ('none', 'None')], default='none', max_length=20)),
                ('driveType', models.CharField(choices=[('hdd', 'Mechanical Disk (HDD)'), ('ssd', 'Solid State Disk (SSD)'), ('none', 'None')], default='none', max_length=10)),
                ('driveSize', models.IntegerField()),
                ('ram', models.IntegerField()),
                ('cpu', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'History',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50)),
                ('dept', models.CharField(max_length=50)),
                ('serial_num', models.CharField(max_length=50)),
                ('inv_num', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Inventory',
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeOf', models.CharField(choices=[('pc', 'PC'), ('monitor', 'Monitor')], max_length=10)),
                ('model', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('vga', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('invalid', 'Does not apply')], default='invalid', max_length=20)),
                ('hdmi', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('invalid', 'Does not apply')], default='invalid', max_length=20)),
                ('display_port', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('invalid', 'Does not apply')], default='invalid', max_length=20)),
                ('screen_size', models.IntegerField()),
                ('os', models.CharField(choices=[('linux', 'Linux'), ('macos', 'MacOS'), ('w_xp', 'Windows XP'), ('w_vista', 'Windows Vista'), ('w_7', 'Windows 7'), ('w_8', 'Windows 8'), ('W_10', 'Windows 10'), ('w_11', 'Windows 11'), ('none', 'None')], default='W_10', max_length=20)),
                ('ram', models.IntegerField()),
                ('cpu', models.CharField(max_length=50)),
                ('driveType', models.CharField(choices=[('hdd', 'Mechanical Disk (HDD)'), ('ssd', 'Solid State Disk (SSD)'), ('none', 'None')], default='hdd', max_length=5)),
                ('driveSize', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'ItemType',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date created')),
                ('assignedTo', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Request',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned', models.BooleanField()),
                ('dateCreation', models.DateTimeField(verbose_name='Date created')),
                ('dateAssign', models.DateTimeField(blank=True, null=True, verbose_name='Date assigned')),
                ('dateFinish', models.DateTimeField(blank=True, null=True, verbose_name='Date finished')),
            ],
            options={
                'verbose_name_plural': 'Ticket',
            },
        ),
        migrations.CreateModel(
            name='UserRegular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dept', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name_plural': 'UserRegular',
            },
        ),
        migrations.CreateModel(
            name='UserTech',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dept', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('roles', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': 'UserTech',
            },
        ),
        migrations.AddConstraint(
            model_name='usertech',
            constraint=models.UniqueConstraint(fields=('name', 'email'), name='unique_technician'),
        ),
        migrations.AddConstraint(
            model_name='userregular',
            constraint=models.UniqueConstraint(fields=('name', 'email'), name='unique_employee'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ID_req',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.request'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ID_tech',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.usertech'),
        ),
        migrations.AddField(
            model_name='request',
            name='ID_inv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.inventory'),
        ),
        migrations.AddField(
            model_name='request',
            name='ID_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.userregular'),
        ),
        migrations.AddField(
            model_name='itemtype',
            name='ID_inv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.inventory'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.UniqueConstraint(fields=('serial_num',), name='unique_serial'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.UniqueConstraint(fields=('inv_num',), name='unique_inv'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.UniqueConstraint(fields=('serial_num', 'inv_num'), name='unique_idnumbers'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.CheckConstraint(check=models.Q(('inv_num__endswith', '_ITT'), ('inv_num__endswith', '_Otay'), ('inv_num__endswith', '_Radio'), _connector='OR'), name='check_inv_location'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.CheckConstraint(check=models.Q(('location__iexact', 'tomas aquino'), ('location__iexact', 'otay'), ('location__iexact', 'fracc monterrey'), _connector='OR'), name='check_location'),
        ),
        migrations.AddField(
            model_name='history',
            name='ID_inv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.inventory'),
        ),
        migrations.AddField(
            model_name='consumables',
            name='ID_inv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBztop.inventory'),
        ),
    ]
